name: SQL Linter for dbt Models and SnowSQL

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code from the repository
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Ensures the full history is available for commits

      # Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      # Install sqlfluff with dbt and dbt-snowflake
      - name: Install sqlfluff and dbt-snowflake
        run: |
          pip install sqlfluff sqlfluff-templater-dbt
          pip install dbt-core dbt-snowflake

      # Export environment variables (for dbt to resolve using env_var in profiles.yml)
      - name: Export environment variables
        env:
          SNOWFLAKE_ACCOUNT_SENDEROS: ${{ secrets.SNOWFLAKE_ACCOUNT_SENDEROS }}
          SNOWFLAKE_USER_SENDEROS: ${{ secrets.SNOWFLAKE_USER_SENDEROS }}
          SNOWFLAKE_PASSWORD_SENDEROS: ${{ secrets.SNOWFLAKE_PASSWORD_SENDEROS }}
          SNOWFLAKE_ROLE_SENDEROS: ${{ secrets.SNOWFLAKE_ROLE_SENDEROS }}
          SNOWFLAKE_SCHEMA: ${{ secrets.SNOWFLAKE_SCHEMA }}
          SNOWFLAKE_WAREHOUSE: ${{ secrets.SNOWFLAKE_WAREHOUSE }}
        run: |
          echo "Environment variables exported successfully for dbt!"

      # Create profiles.yml with env_var usage
      - name: Create profiles.yml
        run: |
          mkdir -p ~/.dbt
          cat <<EOF > ~/.dbt/profiles.yml
          ADO_GROUP1_T01:
            outputs:
              dev:
                type: snowflake
                account: "{{ env_var('SNOWFLAKE_ACCOUNT_SENDEROS') }}"
                user: "{{ env_var('SNOWFLAKE_USER_SENDEROS') }}"
                password: "{{ env_var('SNOWFLAKE_PASSWORD_SENDEROS') }}"
                role: "{{ env_var('SNOWFLAKE_ROLE_SENDEROS') }}"
                database: ADO_GROUP1_DB_RAW
                warehouse: "{{ env_var('SNOWFLAKE_WAREHOUSE') }}"
                schema: "{{ env_var('SNOWFLAKE_SCHEMA') }}"
                threads: 4
            target: dev
          EOF

      # Install dbt dependencies
      - name: Install dbt dependencies
        run: dbt deps

      # Debug dbt setup
      - name: Debug dbt setup
        env:
          SNOWFLAKE_ACCOUNT_SENDEROS: ${{ secrets.SNOWFLAKE_ACCOUNT_SENDEROS }}
          SNOWFLAKE_USER_SENDEROS: ${{ secrets.SNOWFLAKE_USER_SENDEROS }}
          SNOWFLAKE_PASSWORD_SENDEROS: ${{ secrets.SNOWFLAKE_PASSWORD_SENDEROS }}
          SNOWFLAKE_ROLE_SENDEROS: ${{ secrets.SNOWFLAKE_ROLE_SENDEROS }}
          SNOWFLAKE_SCHEMA: ${{ secrets.SNOWFLAKE_SCHEMA }}
          SNOWFLAKE_WAREHOUSE: ${{ secrets.SNOWFLAKE_WAREHOUSE }}
        run: dbt debug

      # Lint SQL files with warning suppression
      - name: Lint dbt SQL models and SnowSQL files
        env:
          SNOWFLAKE_ACCOUNT_SENDEROS: ${{ secrets.SNOWFLAKE_ACCOUNT_SENDEROS }}
          SNOWFLAKE_USER_SENDEROS: ${{ secrets.SNOWFLAKE_USER_SENDEROS }}
          SNOWFLAKE_PASSWORD_SENDEROS: ${{ secrets.SNOWFLAKE_PASSWORD_SENDEROS }}
          SNOWFLAKE_ROLE_SENDEROS: ${{ secrets.SNOWFLAKE_ROLE_SENDEROS }}
          SNOWFLAKE_SCHEMA: ${{ secrets.SNOWFLAKE_SCHEMA }}
          SNOWFLAKE_WAREHOUSE: ${{ secrets.SNOWFLAKE_WAREHOUSE }}
        run: |
          sqlfluff lint . --nofail --verbose 2>&1 | grep -v "was not found in dbt project"
        continue-on-error: true

      # Fix SQL issues
      - name: Fix SQL issues
        env:
          SNOWFLAKE_ACCOUNT_SENDEROS: ${{ secrets.SNOWFLAKE_ACCOUNT_SENDEROS }}
          SNOWFLAKE_USER_SENDEROS: ${{ secrets.SNOWFLAKE_USER_SENDEROS }}
          SNOWFLAKE_PASSWORD_SENDEROS: ${{ secrets.SNOWFLAKE_PASSWORD_SENDEROS }}
          SNOWFLAKE_ROLE_SENDEROS: ${{ secrets.SNOWFLAKE_ROLE_SENDEROS }}
          SNOWFLAKE_SCHEMA: ${{ secrets.SNOWFLAKE_SCHEMA }}
          SNOWFLAKE_WAREHOUSE: ${{ secrets.SNOWFLAKE_WAREHOUSE }}
        if: always()
        run: |
          sqlfluff fix . --verbose 2>&1 | grep -v "was not found in dbt project" || true

      # Lint again to ensure issues are resolved
      - name: Final Lint
        env:
          SNOWFLAKE_ACCOUNT_SENDEROS: ${{ secrets.SNOWFLAKE_ACCOUNT_SENDEROS }}
          SNOWFLAKE_USER_SENDEROS: ${{ secrets.SNOWFLAKE_USER_SENDEROS }}
          SNOWFLAKE_PASSWORD_SENDEROS: ${{ secrets.SNOWFLAKE_PASSWORD_SENDEROS }}
          SNOWFLAKE_ROLE_SENDEROS: ${{ secrets.SNOWFLAKE_ROLE_SENDEROS }}
          SNOWFLAKE_SCHEMA: ${{ secrets.SNOWFLAKE_SCHEMA }}
          SNOWFLAKE_WAREHOUSE: ${{ secrets.SNOWFLAKE_WAREHOUSE }}
        run: |
          sqlfluff lint . --nofail --verbose 2>&1 | grep -v "was not found in dbt project"

      # Commit and push auto-fixes
      - name: Commit and Push Changes
        if: always()
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add .
          git diff-index --quiet HEAD || git commit -m "Auto-fix linting issues"
          git pull origin main --rebase
          git push origin ${{ github.ref_name }}
